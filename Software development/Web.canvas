{
  "edges": [
  ],
  "nodes": [
    {
      "height": 10315,
      "id": "a69e4ccf148ca6ba",
      "label": "HTTP",
      "styleAttributes": {
      },
      "type": "group",
      "width": 2991,
      "x": -680,
      "y": -1173
    },
    {
      "height": 7245,
      "id": "6739545f71583d06",
      "label": "API",
      "styleAttributes": {
      },
      "type": "group",
      "width": 1543,
      "x": 2680,
      "y": -1140
    },
    {
      "height": 2115,
      "id": "a2292da82c606889",
      "label": "G",
      "styleAttributes": {
      },
      "type": "group",
      "width": 1362,
      "x": 680,
      "y": -1090
    },
    {
      "height": 1374,
      "id": "aab7542d0645df91",
      "styleAttributes": {
      },
      "text": "### Glossary\n\n- **URL (Unfiorm Resource Locator)** - complete address for any resource on the internet, like a street address for web content. A URL like `https://api.example.com/users/123?format=json` contains several parts: the protocol (https), the domain (api.example.com), the path (/users/123), and query parameters (?format=json)\n- **Endpoint** - This is a specific URL where your API can receive requests and send back responses. If your API is like a restaurant, endpoints are like the different items on the menu. Each endpoint typically handles one specific function, such as `/users` for getting user data or `/orders` for managing orders. The combination of an HTTP method (GET, POST, etc.) and a URL path creates a unique endpoint\n- **HTTP Methods (Verbs)** - these tell the server what kind of action you want to perform. GET, POST, PUT, PATCH, DELETE\n- **Request and Response** (analogy: question-answer conversation)\n- **Headers** - these are like metadata attached to both requests and responses, providing additional information about the message being sent (Content-Type, Authorization, User-Agent, ...)\n- **Status Codes** - tell you what happened with your request: 200s success (200 OK, 201 Created), 300s redirection, 400s client errors, 500s server errors\n- **JSON (JavaScript Object Notation)** -  `{\"name\": \"John\", \"age\": 30, \"active\": true}`\n- **API (Application Programming Interface)** - a set of rules and specifications that define how different software components can communicate with each other. When we talk about web APIs, we usually mean REST APIs or similar systems that let different applications exchange data over the internet. An API is like a contract that specifies what requests you can make and what responses you'll get back\n- **REST (Representation State Transfer)** - architectural style for designing web APIs that uses standard HTTP methods and follows certain principles. RESTful APIs treat everything as resources (like users, products, or orders) that can be identified by URLs and manipulated using HTTP methods. The beauty of REST is its simplicity and the way it leverages existing web standards.\n- **Client and Server**\n- **Middleware** - This refers to software that sits between different parts of your application, processing requests and responses as they flow through your system\n- **Session and State** - HTTP is stateless by nature, meaning each request is independent and doesn't remember previous requests. Sessions are a way to maintain state across multiple requests from the same user, typically by using cookies or tokens. This allows applications to remember that you're logged in, what's in your shopping cart, or your user preferences across different page visits.\n- **Cookies** - small pieces of data that servers send to browsers, which the browsers then send back with future requests to the same domain. Cookies are commonly used for maintaining user sessions, remembering preferences, or tracking user behavior\n- **Authentication & Authorization** - Authentication answers \"who are you?\" while authorization answers \"what are you allowed to do?\" Authentication typically involves checking credentials like usernames and passwords, while authorization involves checking permissions and roles.\n- **CORS (Cross-Origin Resource Sharing)** - a security feature implemented by web browsers that controls which websites can make requests to your API. By default, browsers block requests from one domain to another (like from example.com to api.otherdomain.com) unless the receiving server explicitly allows it through CORS headers\n- **Webhook** - a way for one application to automatically notify another application when something happens, rather than the second application constantly checking for updates\n- **Database and ORM** - Databases store your application's persistent data, while an ORM (Object-Relational Mapping) is a tool that lets you work with database data using your programming language's objects instead of writing raw SQL queries\n- **Environment Variables** - values that exist outside your code, typically used for configuration settings that change between different environments\n- **SSL/TLS and HTTPS** - SSL (Secure Sockets Layer) and its successor TLS (Transport Layer Security) are protocols that encrypt data traveling between clients and servers. HTTPS is HTTP over an encrypted connection, ensuring that sensitive data like passwords or credit card numbers can't be intercepted. The little lock icon in your browser indicates that HTTPS is being used",
      "type": "text",
      "width": 1036,
      "x": -2064,
      "y": -1074
    },
    {
      "height": 1685,
      "id": "11aa87843c481531",
      "styleAttributes": {
      },
      "text": "### HTTP re\n\nHTTP - Hyper Text Transfer Protocol\n\nHTTP  is stateless:\n- Every request is independent\n- Similar to transactions\n- Programming, Local Storage, Cookies, Sessions are used to create enhanced user experience \n\nHTTPS - Hyper Text Transfer Protocol Secure\n- Data sent is encrypted\n- SSL/TLS\n- Install certificate on web host\n\nMethods:\n- GET - Retrieves data from server\n- POST - Submit data to the server\n- PUT - Update data already on the server\n- DELETE - Deletes data from the serverMei\n\nHeaders:\n\nStatus codes: \n- 1xx: Informational: Request recieved / processing\n- 2xx: Success: Successfully Received, understood and accepted. 200 OK, 201 OK created\n- 3xx: Redirect: Further action must be taken / redirect. 301 Moved to new URL, 304 Not modified (Cached version)\n- 4xx: Client Error: Request does not have what it needs. 400 Bad request, 401 Unauthorized, 404 Not found\n- 5xx: Server Error: Server failed to fulfil an apparent valid request. 500 Internal server error\n\nHTTP/2\n- Major revision of HTTP\n- Under the hood changes\n- Respond with more data\n- Reduce latency by enabling full request and response mulitplexing\n- Fast, efficient and secure",
      "type": "text",
      "width": 1322,
      "x": 693,
      "y": -685
    },
    {
      "file": "Pictures/Pasted image 20250607140619.png",
      "height": 290,
      "id": "3741e7ca85b70074",
      "styleAttributes": {
      },
      "type": "file",
      "width": 867,
      "x": 693,
      "y": -1053
    },
    {
      "height": 1423,
      "id": "ecbde83de03afef8",
      "styleAttributes": {
      },
      "text": "### FastAPI start\n\n#### Understanding What FastAPI Is\n\nBefore diving into code, let's understand what makes FastAPI special. Think of FastAPI as a translator between your Python code and the web. When someone visits a website or mobile app that needs data, FastAPI helps your Python functions respond to those requests quickly and reliably.\n\nFastAPI stands out because it automatically creates documentation for your API, validates incoming data, and provides excellent performance. It's like having a smart assistant that handles all the tedious parts of web development while you focus on your application logic.\n\n```python\nfrom fastapi import FastAPI # Create an instance of FastAPI - think of this as your application's \nfoundation app = FastAPI() # Define a route - this tells FastAPI what to do when someone visits a specific URL \n@app.get(\"/\")\ndef read_root(): \n\treturn {\"Hello\": \"World\"}\n```\n\nAPI with one endpoint. `@app.get(\"/\")` tells to respond to GET requests at the root URL\n```bash\nuvicorn main:app --reload\n```\nThe `--reload` flag automatically restarts the server when you make changes to your code\n`http://127.0.0.1:8000`, `http://127.0.0.1:8000/docs`\n\n#### Understanding Path Parameters\n\n```python\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int):\n    return {\"item_id\": item_id}\n```\nFastAPI uses this to automatically validate that the parameter is indeed an integer. If someone tries to access `/items/hello`, FastAPI will return a helpful error message\n\n#### Working with Query Parameters\nQuery parameters are the key-value pairs that come after the `?` in a URL. They're perfect for optional filters or settings:\n```python\n@app.get(\"/search\")\ndef search_items(q: str = None, limit: int = 10):\n    if q:\n        return {\"query\": q, \"limit\": limit, \"message\": f\"Searching for '{q}' with limit {limit}\"}\n    return {\"message\": \"No search query provided\", \"limit\": limit}\n```",
      "type": "text",
      "width": 1352,
      "x": 5178,
      "y": -1053
    },
    {
      "height": 1812,
      "id": "2eaadb115ca588f6",
      "styleAttributes": {
      },
      "text": "## üîπ –í–æ–ø—Ä–æ—Å: **–ß—Ç–æ —Ç–∞–∫–æ–µ API?**\n\n---\n\n### üî∏ –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç:\n\n**API (Application Programming Interface)** ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–¥–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ (–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥—Ä—É–≥–æ–π –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–Ω–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é.\n\n---\n\n### üî∏ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:\n\n#### 1. **–û–±—â–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:**\n\n> API ‚Äî —ç—Ç–æ –Ω–∞–±–æ—Ä –ø—Ä–∞–≤–∏–ª (–ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞–º –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º–∏ –∏ –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞. –û–Ω –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, **—á—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å, –∫–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è, –∫–∞–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏ —á—Ç–æ –æ–∂–∏–¥–∞—Ç—å –≤ –æ—Ç–≤–µ—Ç**.\n\n---\n\n#### 2. **–ó–∞—á–µ–º –Ω—É–∂–µ–Ω API:**\n\n- **–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è** –ª–æ–≥–∏–∫–∏: –Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ—Ä–≤–∏—Å –≤–Ω—É—Ç—Ä–∏.\n    \n- **–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ**: —Ä–∞–∑–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.\n    \n- **–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è –æ–±—â–µ–Ω–∏—è** –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏, —Å–µ—Ä–≤–∏—Å–∞–º–∏, –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏ –∏ —Ç.–¥.\n    \n- **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è** —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏: –ø–ª–∞—Ç—ë–∂–Ω—ã–µ —à–ª—é–∑—ã, –∫–∞—Ä—Ç—ã, —Å–æ—Ü—Å–µ—Ç–∏, GPT –∏ –ø—Ä.\n    \n\n---\n\n#### 3. **–¢–∏–ø—ã API:**\n\n|–¢–∏–ø API|–û–ø–∏—Å–∞–Ω–∏–µ|\n|---|---|\n|**Web API**|–î–æ—Å—Ç—É–ø –ø–æ —Å–µ—Ç–∏ —á–µ—Ä–µ–∑ HTTP (REST, GraphQL, SOAP)|\n|**Library API**|–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, NumPy, OpenCV)|\n|**OS API**|–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –û–° (–Ω–∞–ø—Ä–∏–º–µ—Ä, WinAPI)|\n|**Hardware API**|–†–∞–±–æ—Ç–∞ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ –¥—Ä–∞–π–≤–µ—Ä–∞)|\n\n---\n\n#### 4. **–ü—Ä–∏–º–µ—Ä Web API:**\n\n**REST API** ‚Äî —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä:\n\n–ó–∞–ø—Ä–æ—Å:\n\nvbnet\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`GET /users/42 HTTP/1.1 Host: api.example.com`\n\n–û—Ç–≤–µ—Ç:\n\njson\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`{   \"id\": 42,   \"name\": \"Alice\",   \"email\": \"alice@example.com\" }`\n\n---\n\n#### 5. **–ö–ª—é—á–µ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ Web API:**\n\n|–¢–µ—Ä–º–∏–Ω|–û–ø–∏—Å–∞–Ω–∏–µ|\n|---|---|\n|**Endpoint**|URL-–∞–¥—Ä–µ—Å API, –Ω–∞–ø—Ä–∏–º–µ—Ä `/users/42`|\n|**HTTP-–º–µ—Ç–æ–¥—ã**|`GET`, `POST`, `PUT`, `DELETE` –∏ –¥—Ä.|\n|**Request/Response**|–ó–∞–ø—Ä–æ—Å –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ ‚Üí –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞|\n|**Status codes**|`200 OK`, `404 Not Found`, `500 Server Error`|\n|**JSON / XML**|–§–æ—Ä–º–∞—Ç—ã –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö|\n|**–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è**|–ß–∞—Å—Ç–æ API —Ç—Ä–µ–±—É–µ—Ç —Ç–æ–∫–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, JWT, API key)|",
      "type": "text",
      "width": 1503,
      "x": 2694,
      "y": -1118
    },
    {
      "height": 2354,
      "id": "9a598194322be2fb",
      "styleAttributes": {
      },
      "text": "## üîπ –í–æ–ø—Ä–æ—Å: **–ß—Ç–æ —Ç–∞–∫–æ–µ REST?**\n\n---\n\n### üî∏ –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç:\n\n**REST (Representational State Transfer)** ‚Äî —ç—Ç–æ **–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å** –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è **—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º**, –æ—Å–æ–±–µ–Ω–Ω–æ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤. REST –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç **–ø—Ä–∏–Ω—Ü–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º —á–µ—Ä–µ–∑ HTTP**.\n\n---\n\n### üî∏ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:\n\n#### 1. **–û–±—â–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:**\n\n> REST ‚Äî —ç—Ç–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. –û–Ω –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ **—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞—Ö HTTP** –∏ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ –∫–∞–∂–¥–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ ‚Äî —ç—Ç–æ **–æ–±–º–µ–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º —Ä–µ—Å—É—Ä—Å–∞** (Representational State Transfer).\n\n---\n\n#### 2. **–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã REST (6 constraints):**\n\n|–ü—Ä–∏–Ω—Ü–∏–ø|–û–±—ä—è—Å–Ω–µ–Ω–∏–µ|\n|---|---|\n|**–ö–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**|–ß—ë—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –∏ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ª–æ–≥–∏–∫–∏|\n|**–ë–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (stateless)**|–ö–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω (—Å–µ—Ä–≤–µ—Ä –Ω–µ —Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞)|\n|**–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ (caching)**|–†–µ—Å—É—Ä—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–∫–µ—à–∏—Ä–æ–≤–∞–Ω—ã ‚Äî —É–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å|\n|**–ï–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞**|–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è (HTTP-–º–µ—Ç–æ–¥—ã, URI –∏ –¥—Ä.)|\n|**–°–ª–æ–π–Ω–æ—Å—Ç—å (layered system)**|–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ (–ø—Ä–æ–∫—Å–∏, –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∏)|\n|_(–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)_ **Code on Demand**|–°–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –∫–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, JS)|\n\n---\n\n#### 3. **–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã REST API:**\n\n|–¢–µ—Ä–º–∏–Ω|–û–ø–∏—Å–∞–Ω–∏–µ|\n|---|---|\n|**–†–µ—Å—É—Ä—Å**|–°—É—â–Ω–æ—Å—Ç—å, –¥–æ—Å—Ç—É–ø–Ω–∞—è –ø–æ URI (–Ω–∞–ø—Ä–∏–º–µ—Ä, `/users/1`)|\n|**–ú–µ—Ç–æ–¥—ã**|HTTP-–º–µ—Ç–æ–¥—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ —Ä–µ—Å—É—Ä—Å–æ–º|\n|**–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ**|–°–ø–æ—Å–æ–± –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞ ‚Äî —á–∞—â–µ –≤—Å–µ–≥–æ JSON –∏–ª–∏ XML|\n|**URI**|–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ—Å—É—Ä—Å–∞|\n\n---\n\n#### 4. **HTTP-–º–µ—Ç–æ–¥—ã –≤ REST:**\n\n|–ú–µ—Ç–æ–¥|–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ|–ü—Ä–∏–º–µ—Ä|\n|---|---|---|\n|`GET`|–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Å—É—Ä—Å|`GET /users/1`|\n|`POST`|–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Å—É—Ä—Å|`POST /users`|\n|`PUT`|–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ—Å—É—Ä—Å|`PUT /users/1`|\n|`PATCH`|–ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ—Å—É—Ä—Å|`PATCH /users/1`|\n|`DELETE`|–£–¥–∞–ª–∏—Ç—å —Ä–µ—Å—É—Ä—Å|`DELETE /users/1`|\n\n---\n\n#### 5. **–ü—Ä–∏–º–µ—Ä REST API-–∑–∞–ø—Ä–æ—Å–∞:**\n\n##### –ó–∞–ø—Ä–æ—Å:\n\nvbnet\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`GET /users/42 HTTP/1.1 Host: api.example.com Accept: application/json`\n\n##### –û—Ç–≤–µ—Ç:\n\njson\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`{   \"id\": 42,   \"name\": \"Alice\",   \"email\": \"alice@example.com\" }`\n\n---\n\n#### 6. **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ REST:**\n\n- –ü—Ä–æ—Å—Ç–æ—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª—ã)\n    \n- –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å URI\n    \n- –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—å\n    \n- –õ—ë–≥–∫–æ—Å—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è\n    \n- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ø–æ—á—Ç–∏ –≤–æ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö/—Å—Ä–µ–¥–∞—Ö\n    \n\n---\n\n#### 7. **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ REST:**\n\n- –ù–µ—Ç —Å—Ç—Ä–æ–≥–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ (–ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å gRPC, –Ω–∞–ø—Ä–∏–º–µ—Ä)\n    \n- –ú–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–±—ã—Ç–æ—á–Ω—ã–º –ø—Ä–∏ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ ‚Äî GraphQL)\n    \n- –¢—Ä–µ–±—É–µ—Ç —Ö–æ—Ä–æ—à–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏\n    \n\n---",
      "type": "text",
      "width": 1503,
      "x": 2694,
      "y": 774
    },
    {
      "height": 1752,
      "id": "2fd13f5310f707ba",
      "styleAttributes": {
      },
      "text": "### HTTP\nHTTP (HyperText Transfer Protocol) - essentially a conversation between web browsers and web severs\n\n- The **request line** tells the server what you want to do and where you want to do it:\n\t- HTTP method (like GET, POST)\n\t- Path\n\t- HTTP version\n- The **headers** provide additional context about request (what type of content accept, what browser using, auth info)\n- The **body** (optional) contains data you're sending to the server (form submissions, file uploads)\n\n### Making some requests\n```python\nresponse = requests.get(\"https://httpbin.org/headers\")\n```\n```markdown\nHeaders our browser sent:\nAccept: */*                            # —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å –≤ –æ—Ç–≤–µ—Ç - –∑–¥–µ—Å—å –ª—é–±–æ–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞\nAccept-Encoding: gzip, deflate         # –∫–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã —Å–∂–∞—Ç–∏—è –∫–ª–∏–µ–Ω—Ç –ø–æ–Ω–∏–º–∞–µ—Ç\nHost: httpbin.org                      # –∫–∞–∫–æ–π –¥–æ–º–µ–Ω—Ç –∫–ª–∏–µ–Ω—Ç —Ö–æ—á–µ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å\nUser-Agent: python-requests/2.32.3     # –∫—Ç–æ –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å\nX-Amzn-Trace-Id: Root=1-683b3986-16d55c1f3f40c9f922e197ff # –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã Amazon\n```\n\n### GET\n- Base URL: `https://example.com/api/users`\n- Query Parameters: `?name=John&age=25&city=Boston`\n- Headers: Authentication tokens, content preferences, browser info\n```\nGET /api/users?name=John&age=25&city=Boston HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0...\nAuthorization: Bearer abc123\nAccept: application/json\n```\n\nData typically sent:\n- Search terms\n- Filter criteria\n- Page numbers\n- Sorting preferences\n- User preferences\n- API keys\n\n### POST \nLocation of data: primarily in the request body\n**Components:**\n- **URL**: Just the endpoint `https://example.com/api/users`\n- **Headers**: Content type, auth, etc.\n- **Body**: The actual data payload\n\n```\nPOST /api/users HTTP/1.1\nHost: example.com\nContent-Type: application/json\nContent-Length: 156\nAuthorization: Bearer abc123\n\n{\n  \"name\": \"John\",\n  \"email\": \"john@example.com\",\n  \"age\": 25,\n  \"address\": {\n    \"city\": \"Boston\",\n    \"zip\": \"02101\"\n  }\n}\n```",
      "type": "text",
      "width": 1210,
      "x": -660,
      "y": -685
    },
    {
      "height": 6324,
      "id": "0c3905d187722d86",
      "styleAttributes": {
      },
      "text": "### üîπ –í–æ–ø—Ä–æ—Å: **–ß—Ç–æ —Ç–∞–∫–æ–µ HTTP?**\n\n### üî∏ –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç:\n\nHTTP (HyperText Transfer Protocol) ‚Äî —ç—Ç–æ –ø—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏–∫–ª–∞–¥–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–æ–º (—á–∞—â–µ –≤—Å–µ–≥–æ –±—Ä–∞—É–∑–µ—Ä–æ–º) –∏ —Å–µ—Ä–≤–µ—Ä–æ–º. –û–Ω –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –∫–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–≤–µ—Ä—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ TCP.\n\n---\n\n### üî∏ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:\n\n#### 1. **–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**\n\n- **–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏–∫–ª–∞–¥–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è** (—É—Ä–æ–≤–µ–Ω—å 7 –º–æ–¥–µ–ª–∏ OSI).\n    \n- **–†–∞–±–æ—Ç–∞–µ—Ç –ø–æ–≤–µ—Ä—Ö TCP** (–æ–±—ã—á–Ω–æ –ø–æ—Ä—Ç 80 –¥–ª—è HTTP, 443 –¥–ª—è HTTPS).\n    \n- **–¢–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª** ‚Äî —Å–æ–æ–±—â–µ–Ω–∏—è —á–∏—Ç–∞–µ–º—ã —á–µ–ª–æ–≤–µ–∫–æ–º.\n    \n- **–ë–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (stateless)** ‚Äî –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö (–¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫—É–∫–∏, —Å–µ—Å—Å–∏–∏ –∏ —Ç. –¥.).\n    \n\n#### 2. **–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:**\n\n- –ö–ª–∏–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±—Ä–∞—É–∑–µ—Ä) –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç **HTTP-–∑–∞–ø—Ä–æ—Å** –Ω–∞ —Å–µ—Ä–≤–µ—Ä.\n    \n- –°–µ—Ä–≤–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç **HTTP-–æ—Ç–≤–µ—Ç**.\n    \n- –ü—Ä–∏–º–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç URL ‚Üí –±—Ä–∞—É–∑–µ—Ä –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å ‚Üí —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É.\n    \n\n#### 3. **–ú–µ—Ç–æ–¥—ã HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ (verbs):**\n\n- `GET` ‚Äî –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–∞–Ω–∏—Ü—É).\n    \n- `POST` ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ä–º—É).\n    \n- `PUT` ‚Äî –∑–∞–º–µ–Ω–∏—Ç—å —Ä–µ—Å—É—Ä—Å.\n    \n- `PATCH` ‚Äî —á–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ—Å—É—Ä—Å.\n    \n- `DELETE` ‚Äî —É–¥–∞–ª–∏—Ç—å —Ä–µ—Å—É—Ä—Å.\n    \n- `HEAD`, `OPTIONS`, `CONNECT`, `TRACE` ‚Äî –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã.\n    \n\n#### 4. **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ HTTP-–∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞:**\n\n**–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:**\n\npgsql\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`GET /index.html HTTP/1.1 Host: example.com User-Agent: Mozilla/5.0`\n\n**–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:**\n\nyaml\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`HTTP/1.1 200 OK Content-Type: text/html Content-Length: 1256  <html>...</html>`\n\n#### 5. **–ö–æ–¥—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è (status codes):**\n\n- **1xx** ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ (—Ä–µ–¥–∫–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è).\n    \n- **2xx** ‚Äî —É—Å–ø–µ—Ö (`200 OK`, `201 Created`).\n    \n- **3xx** ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (`301 Moved Permanently`, `302 Found`).\n    \n- **4xx** ‚Äî –æ—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ (`404 Not Found`, `403 Forbidden`).\n    \n- **5xx** ‚Äî –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (`500 Internal Server Error`, `503 Service Unavailable`).\n    \n\n#### 6. **HTTP/1.1 vs HTTP/2 vs HTTP/3:**\n\n- **HTTP/1.1** ‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π.\n    \n- **HTTP/2** ‚Äî –±–∏–Ω–∞—Ä–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª, –º—É–ª—å—Ç–∏–ø–ª–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤.\n    \n- **HTTP/3** ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–≤–µ—Ä—Ö QUIC (UDP), –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ –ø–∞–∫–µ—Ç–æ–≤, —Å–Ω–∏–∂–∞–µ—Ç –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å.\n    \n\n---\n\n### üî∏ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ (–µ—Å–ª–∏ —Å–ø—Ä–æ—Å—è—Ç –≤–≥–ª—É–±—å):\n\n- **HTTPS** ‚Äî —ç—Ç–æ HTTP + TLS (—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç MITM-–∞—Ç–∞–∫).\n    \n- **CORS** ‚Äî –º–µ—Ö–∞–Ω–∏–∑–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –º–µ–∂–¥–æ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã.\n    \n- **–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ** –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (`Cache-Control`, `ETag` –∏ —Ç. –¥.).\n    \n- **Content negotiation** ‚Äî —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã (HTML, JSON –∏ —Ç. –¥.) –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ `Accept`.\n\n\n---\n\n## üîπ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ HTTP-–∑–∞–ø—Ä–æ—Å–∞\n\n–ó–∞–ø—Ä–æ—Å —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ **—Ç—Ä—ë—Ö —á–∞—Å—Ç–µ–π**:\n\n1. **–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ (Request Line)**\n    \n2. **–ó–∞–≥–æ–ª–æ–≤–∫–∏ (Headers)**\n    \n3. **–¢–µ–ª–æ (Body)** ‚Äî **–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ**, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–µ—Ç–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, POST, PUT)\n    \n\n---\n\n### üî∏ 1. –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ (Request Line)\n\n–§–æ—Ä–º–∞—Ç:\n\nphp-template\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`<–ú–µ—Ç–æ–¥> <–ü—É—Ç—å> <–í–µ—Ä—Å–∏—è HTTP>`\n\n**–ü—Ä–∏–º–µ—Ä:**\n\nbash\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`GET /products?id=42 HTTP/1.1`\n\n|–ü–æ–ª–µ|–û–ø–∏—Å–∞–Ω–∏–µ|\n|---|---|\n|`GET`|HTTP-–º–µ—Ç–æ–¥|\n|`/products?id=42`|URI/–ø—É—Ç—å –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞|\n|`HTTP/1.1`|–í–µ—Ä—Å–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ HTTP|\n\n---\n\n### üî∏ 2. –ó–∞–≥–æ–ª–æ–≤–∫–∏ (Headers)\n\n–ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–µ—Ä–µ–¥–∞—é—Ç **–º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é**: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ, —Ç–∏–ø–µ –¥–∞–Ω–Ω—ã—Ö, –∫–æ–¥–∏—Ä–æ–≤–∫–µ, –¥–ª–∏–Ω–µ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞, cookies –∏ —Ç. –¥.\n\n**–ü—Ä–∏–º–µ—Ä:**\n\nmakefile\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`Host: example.com User-Agent: Mozilla/5.0 Accept: text/html Accept-Language: en-US Content-Type: application/json Content-Length: 47 Authorization: Bearer <token>`\n\nüìå –ü—Ä–∏–º–µ—Ä—ã –∫–ª—é—á–µ–≤—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:\n\n|–ó–∞–≥–æ–ª–æ–≤–æ–∫|–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ|\n|---|---|\n|`Host`|–û–±—è–∑–∞—Ç–µ–ª–µ–Ω –≤ HTTP/1.1 ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ–º–µ–Ω|\n|`User-Agent`|–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ (–±—Ä–∞—É–∑–µ—Ä–µ, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ)|\n|`Accept`|–ö–∞–∫–æ–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ–∂–∏–¥–∞–µ—Ç—Å—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞|\n|`Content-Type`|–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –≤ —Ç–µ–ª–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)|\n|`Content-Length`|–†–∞–∑–º–µ—Ä —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (–≤ –±–∞–π—Ç–∞—Ö)|\n|`Authorization`|–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (—á–∞—â–µ –≤—Å–µ–≥–æ —Ç–æ–∫–µ–Ω –∏–ª–∏ Basic auth)|\n\n---\n\n### üî∏ 3. –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (Body)\n\n–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç **–Ω–µ –≤—Å–µ–≥–¥–∞**, –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å –º–µ—Ç–æ–¥–∞–º–∏ `POST`, `PUT`, `PATCH`.\n\n**–ü—Ä–∏–º–µ—Ä—ã:**\n\n- **application/x-www-form-urlencoded:**\n    \n    ini\n    \n    –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n    \n    `username=alice&password=12345`\n    \n- **application/json:**\n    \n    json\n    \n    –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n    \n    `{   \"username\": \"alice\",   \"password\": \"12345\" }`\n    \n\n---\n\n## üîπ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ HTTP-–æ—Ç–≤–µ—Ç–∞\n\n–û—Ç–≤–µ—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑:\n\n1. **–°—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ (Status Line)**\n    \n2. **–ó–∞–≥–æ–ª–æ–≤–∫–æ–≤ (Headers)**\n    \n3. **–¢–µ–ª–∞ (Body)** ‚Äî –º–æ–∂–µ—Ç –±—ã—Ç—å HTML, JSON, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ —Ç.–¥.\n    \n\n---\n\n### üî∏ 1. –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ (Status Line)\n\n–§–æ—Ä–º–∞—Ç:\n\nphp-template\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`<–í–µ—Ä—Å–∏—è HTTP> <–ö–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è> <–§—Ä–∞–∑–∞>`\n\n**–ü—Ä–∏–º–µ—Ä:**\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`HTTP/1.1 200 OK`\n\n|–ü–æ–ª–µ|–û–ø–∏—Å–∞–Ω–∏–µ|\n|---|---|\n|`HTTP/1.1`|–í–µ—Ä—Å–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞|\n|`200`|–ö–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è|\n|`OK`|–ß–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞|\n\nüß© –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–æ–≤:\n\n- `200 OK` ‚Äî —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç\n    \n- `201 Created` ‚Äî —Ä–µ—Å—É—Ä—Å —Å–æ–∑–¥–∞–Ω\n    \n- `400 Bad Request` ‚Äî –æ—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞\n    \n- `401 Unauthorized` ‚Äî –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è\n    \n- `403 Forbidden` ‚Äî –∑–∞–ø—Ä–µ—â—ë–Ω –¥–æ—Å—Ç—É–ø\n    \n- `404 Not Found` ‚Äî —Ä–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω\n    \n- `500 Internal Server Error` ‚Äî –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞\n    \n\n---\n\n### üî∏ 2. –ó–∞–≥–æ–ª–æ–≤–∫–∏ (Headers)\n\n–ü–æ—Ö–æ–∂–∏–µ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞, –Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–æ–º –∫–ª–∏–µ–Ω—Ç—É.\n\n**–ü—Ä–∏–º–µ—Ä:**\n\nyaml\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`Content-Type: text/html; charset=UTF-8 Content-Length: 2034 Set-Cookie: sessionId=abc123; HttpOnly Cache-Control: no-cache`\n\nüìå –í–∞–∂–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏:\n\n|–ó–∞–≥–æ–ª–æ–≤–æ–∫|–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ|\n|---|---|\n|`Content-Type`|–¢–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ|\n|`Content-Length`|–†–∞–∑–º–µ—Ä —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞|\n|`Set-Cookie`|–£—Å—Ç–∞–Ω–æ–≤–∫–∞ cookie|\n|`Cache-Control`|–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º|\n|`Location`|URL –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–ø—Ä–∏ 3xx)|\n|`Access-Control-Allow-Origin`|CORS-–∑–∞–≥–æ–ª–æ–≤–æ–∫|\n\n---\n\n### üî∏ 3. –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (Body)\n\n–ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å:\n\n- HTML\n    \n- JSON\n    \n- XML\n    \n- —Ç–µ–∫—Å—Ç\n    \n- –¥–≤–æ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Ñ–∞–π–ª—ã)\n    \n\n**–ü—Ä–∏–º–µ—Ä HTML:**\n\nhtml\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`<html>   <head><title>Hello</title></head>   <body>Hello, world!</body> </html>`\n\n**–ü—Ä–∏–º–µ—Ä JSON:**\n\njson\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`{   \"message\": \"success\",   \"data\": {     \"id\": 42,     \"name\": \"Product X\"   } }`\n\n---\n\n## üîπ –ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞\n\n### ‚úÖ –ó–∞–ø—Ä–æ—Å:\n\nmakefile\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`POST /api/login HTTP/1.1 Host: example.com Content-Type: application/json Content-Length: 47  {   \"username\": \"alice\",   \"password\": \"12345\" }`\n\n### ‚úÖ –û—Ç–≤–µ—Ç:\n\nmakefile\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`HTTP/1.1 200 OK Content-Type: application/json Content-Length: 54 Set-Cookie: sessionId=abc123; HttpOnly  {   \"message\": \"Login successful\",   \"userId\": 7 }`",
      "type": "text",
      "width": 1342,
      "x": 872,
      "y": 2509
    },
    {
      "height": 2913,
      "id": "98bddf958d4be360",
      "styleAttributes": {
      },
      "text": "## üî∏ 6 –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ REST (Constraints)\n\nREST ‚Äî —ç—Ç–æ **–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å**, –æ–ø–∏—Å–∞–Ω–Ω—ã–π –†–æ–µ–º –§–∏–ª–¥–∏–Ω–≥–æ–º –≤ –µ–≥–æ –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏–∏ (2000). –û–Ω –±–∞–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ **—à–µ—Å—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö (constraints)**. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –∏–∑ –Ω–∏—Ö ‚Äî –∑–Ω–∞—á–∏—Ç, —ç—Ç–æ —É–∂–µ –Ω–µ REST.\n\n---\n\n### 1. **–ö–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä (Client-Server)**\n\n**–°—É—Ç—å:**  \n–ö–ª–∏–µ–Ω—Ç –∏ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑–¥–µ–ª–µ–Ω—ã:\n\n- **–ö–ª–∏–µ–Ω—Ç** ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n    \n- **–°–µ—Ä–≤–µ—Ä** ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É.\n    \n\n**–ó–∞—á–µ–º:**\n\n- –£–ª—É—á—à–∞–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å: –º–æ–∂–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç –∏ —Å–µ—Ä–≤–µ—Ä –æ—Ç–¥–µ–ª—å–Ω–æ.\n    \n- –£–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É: –∫–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–≤–æ—ë.\n    \n- –õ–µ–≥–∫–æ –º–µ–Ω—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.\n    \n\n**–ü—Ä–∏–º–µ—Ä:**  \n–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ React (–∫–ª–∏–µ–Ω—Ç), –±–µ–∫–µ–Ω–¥ –Ω–∞ Flask (—Å–µ—Ä–≤–µ—Ä). React –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ API, –Ω–µ –∑–Ω–∞—è, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å.\n\n---\n\n### 2. **–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (Stateless)**\n\n**–°—É—Ç—å:**  \n–ö–∞–∂–¥—ã–π HTTP-–∑–∞–ø—Ä–æ—Å –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å **—Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º**. –°–µ—Ä–≤–µ—Ä **–Ω–µ —Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞** –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏.\n\n**–ó–∞—á–µ–º:**\n\n- –£–ø—Ä–æ—â–∞–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –Ω–µ—Ç —Å–µ—Å—Å–∏–π, –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É.\n    \n- –°–µ—Ä–≤–µ—Ä —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–æ—â–µ –∏ —É—Å—Ç–æ–π—á–∏–≤–µ–µ.\n    \n\n**–ü—Ä–∏–º–µ—Ä:**  \n–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è ‚Äî –æ–Ω –¥–æ–ª–∂–µ–Ω **–≤ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ** –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, `Authorization: Bearer <token>`. –°–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–º–Ω–∏—Ç, –∫—Ç–æ —Ç—ã, –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –≤ –∑–∞–ø—Ä–æ—Å ‚Äî –æ–Ω –ø—Ä–æ—Å—Ç–æ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ç–æ–∫–µ–Ω.\n\n---\n\n### 3. **–ö–µ—à–∏—Ä—É–µ–º–æ—Å—Ç—å (Cacheable)**\n\n**–°—É—Ç—å:**  \n–û—Ç–≤–µ—Ç—ã –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑—ã–≤–∞—Ç—å, **–º–æ–∂–Ω–æ –ª–∏ –∏—Ö –∫–µ—à–∏—Ä–æ–≤–∞—Ç—å**, –∏ –µ—Å–ª–∏ –¥–∞ ‚Äî –Ω–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫. –≠—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ —Å–µ—Ä–≤–µ—Ä—É.\n\n**–ó–∞—á–µ–º:**\n\n- –ü–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.\n    \n- –£–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä.\n    \n\n**–ü—Ä–∏–º–µ—Ä:**  \n`GET /products/123` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ. –í –∑–∞–≥–æ–ª–æ–≤–∫–µ –µ—Å—Ç—å:\n\narduino\n\n–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n`Cache-Control: max-age=3600`\n\n‚Üí –±—Ä–∞—É–∑–µ—Ä/–ø—Ä–æ–∫—Å–∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–µ—à –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.\n\n---\n\n### 4. **–ï–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (Uniform Interface)**\n\n**–°—É—Ç—å:**  \n–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å **—É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω**. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ **–æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —Å–ø–æ—Å–æ–±–æ–º**.\n\n**–ß–µ—Ç—ã—Ä–µ –ø–æ–¥-–ø—Ä–∏–Ω—Ü–∏–ø–∞:**\n\n1. **–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤:** –∫–∞–∂–¥—ã–π —Ä–µ—Å—É—Ä—Å –∏–º–µ–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π URI  \n    ‚Üí `/users/123`\n    \n2. **–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è —á–µ—Ä–µ–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ:** –∫–ª–∏–µ–Ω—Ç —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–º, –æ—Ç–ø—Ä–∞–≤–ª—è—è –µ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ (JSON –∏ —Ç.–ø.)\n    \n3. **–°–∞–º–æ–æ–ø–∏—Å—ã–≤–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:** –∑–∞–ø—Ä–æ—Å—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –≤—Å—é –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–º–µ—Ç–æ–¥, –∑–∞–≥–æ–ª–æ–≤–∫–∏, —Ç–µ–ª–æ)\n    \n4. **–ì–∏–ø–µ—Ä–º–µ–¥–∏–∞ –∫–∞–∫ –¥–≤–∏–∂–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (HATEOAS):** –æ—Ç–≤–µ—Ç –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è  \n    ‚Üí –ø—Ä–∏–º–µ—Ä:\n    \n    json\n    \n    –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n    \n    `{   \"id\": 123,   \"name\": \"Alice\",   \"links\": [     { \"rel\": \"update\", \"href\": \"/users/123\", \"method\": \"PUT\" },     { \"rel\": \"delete\", \"href\": \"/users/123\", \"method\": \"DELETE\" }   ] }`\n    \n\n**–ó–∞—á–µ–º:**\n\n- –£–ø—Ä–æ—â–∞–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ API.\n    \n- –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ—Ç –æ–±—â–µ–Ω–∏–µ.\n    \n- –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à, –ø—Ä–æ–∫—Å–∏, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥—Ä—É–≥–∏–µ –æ–±—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.\n    \n\n---\n\n### 5. **–°–ª–æ–∏ (Layered System)**\n\n**–°—É—Ç—å:**  \n–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ–π: –∫–ª–∏–µ–Ω—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, –Ω–∞–ø—Ä—è–º—É—é –ª–∏ –æ–Ω –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∏–ª–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏, –∫–µ—à –∏–ª–∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫.\n\n**–ó–∞—á–µ–º:**\n\n- –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —É–∑–ª—ã: –∫–µ—à–∏, API-—à–ª—é–∑—ã, –ø—Ä–æ–∫—Å–∏.\n    \n- –ü–æ–≤—ã—à–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å.\n    \n\n**–ü—Ä–∏–º–µ—Ä:**  \n–ö–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑:\n\n- API-—à–ª—é–∑ (–ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–∫–µ–Ω)\n    \n- –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ (—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã)\n    \n- –ö–µ—à (–º–æ–∂–µ—Ç –æ—Ç–¥–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç)\n    \n- –ò —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Å–µ—Ä–≤–∏—Å\n    \n\n---\n\n### 6. **Code on Demand (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)**\n\n**–°—É—Ç—å:**  \n–°–µ—Ä–≤–µ—Ä **–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–¥**, –∫–æ—Ç–æ—Ä—ã–π –∫–ª–∏–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä, JavaScript –≤ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö.\n\n**–ó–∞—á–µ–º:**\n\n- –ü–æ–≤—ã—à–∞–µ—Ç –≥–∏–±–∫–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–∞.\n    \n- –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä—É –¥–æ–±–∞–≤–ª—è—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ.\n    \n\n**–ü—Ä–∏–º–µ—Ä:**  \nREST API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É —Å JavaScript-—Ñ—É–Ω–∫—Ü–∏–µ–π, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.\n\n‚ö†Ô∏è –≠—Ç–æ **–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø**, –∏ —á–∞—â–µ –≤—Å–µ–≥–æ –≤ Web API –æ–Ω **–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è**, –ø–æ—Ç–æ–º—É —á—Ç–æ REST —á–∞—â–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ JSON-–¥–∞–Ω–Ω—ã–º, –∞ –Ω–µ –∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é –∫–æ–¥–∞.",
      "type": "text",
      "width": 1503,
      "x": 2694,
      "y": 3174
    },
    {
      "height": 1072,
      "id": "043808afe32d8292",
      "styleAttributes": {
      },
      "text": "### –ö–ª–∏–µ–Ω—Ç\n\n–ß—Ç–æ –ø–µ—Ä–µ–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/–ø—Ä–æ–≥—Ä–∞–º–º–∞:\n\n|–ü–∞—Ä–∞–º–µ—Ç—Ä|–ß—Ç–æ —ç—Ç–æ|–ü—Ä–∏–º–µ—Ä|\n|---|---|---|\n|üß≠ URL / IP –∞–¥—Ä–µ—Å|–ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è|`https://example.com/api/data` –∏–ª–∏ `93.184.216.34`|\n|üõ† –ü–æ—Ä—Ç|–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–ª–∏ —è–≤–Ω–æ|`443` –¥–ª—è HTTPS, `80` –¥–ª—è HTTP|\n|üì° –ü—Ä–æ—Ç–æ–∫–æ–ª|TCP –∏–ª–∏ UDP|TCP –¥–ª—è HTTP|\n|üßæ –ú–µ—Ç–æ–¥ (–µ—Å–ª–∏ HTTP)|GET, POST –∏ —Ç.–¥.|`GET`|\n|üß∞ Payload / –∑–∞–≥–æ–ª–æ–≤–∫–∏|–ü–æ –∂–µ–ª–∞–Ω–∏—é|JSON, headers –∏ —Ç.–¥.|",
      "type": "text",
      "width": 1496,
      "x": 693,
      "y": 1218
    },
    {
      "height": 909,
      "id": "35b54aba03edaddf",
      "styleAttributes": {
      },
      "text": "### Payload\n- Payload - –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä—É –≤ —Ç–µ–ª–µ HTTP-–∑–∞–ø—Ä–æ—Å–∞\n- –ù–µ –≤–æ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–∞—Ö –µ—Å—Ç—å payload (e.g. GET –±–µ–∑ —Ç–µ–ª–∞)\n- –ß–∞—Å—Ç–æ —ç—Ç–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç - JSON, XML, form-data, –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n\n–ü—Ä–∏–º–µ—Ä payload\n\nPOST /api/user:\n```json\n{\n\t\"name\": \"Alice\",\n\t\"email\": \"alice@example.com\"\n}\n```\n–í –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:\n```pgsql\nContent-Type: application/json\n```\n\n–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:\n\n```makefile\nPOST /api/user HTTP/1.1\nHost: example.com\nContent-Type: application/json\nContent-Length: 47\n\n{\n  \"name\": \"Alice\",\n  \"email\": \"alice@example.com\"\n}\n```\n\n- –ö–ª–∏–µ–Ω—Ç —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –±–∞–π—Ç–æ–≤—ã–π –ø–æ—Ç–æ–∫, –≥–¥–µ —Ç–µ–ª–æ (payload) –∏–¥—ë—Ç –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤\n- –≠—Ç–æ—Ç –ø–æ—Ç–æ–∫ –¥—Ä–æ–±–∏—Ç—Å—è –Ω–∞ TCP-—Å–µ–≥–º–µ–Ω—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n- –°–µ—Ä–≤–µ—Ä —Å–æ–±–∏—Ä–∞–µ—Ç —Å–µ–≥–º–µ–Ω—Ç—ã, —á–∏—Ç–∞–µ—Ç HTTP-–∑–∞–ø—Ä–æ—Å, –ø–∞—Ä—Å–∏—Ç payload",
      "type": "text",
      "width": 1210,
      "x": -660,
      "y": 2417
    },
    {
      "height": 1072,
      "id": "fe67d292a51a0c0b",
      "styleAttributes": {
      },
      "text": "### HTTP –º–µ—Ç–æ–¥—ã\n| –ú–µ—Ç–æ–¥   | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                    | –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ                                                                                  | –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞                                 | –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ –ø—Ä–∏–º–µ—Ä—É                                                           |\n| ------- | ----------------------------- | ------------------------------------------------------------------------------------------------- | ---------------------------------------------- | ----------------------------------------------------------------------------- |\n| GET     | –ó–∞–ø—Ä–æ—Å —Ä–µ—Å—É—Ä—Å–∞                | –ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞. –û–±—ã—á–Ω–æ –±–µ–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞.                                 | `GET /api/users/123 HTTP/1.1`                  | –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id=123 –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞               |\n| POST    | –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ | –ö–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è). –ï—Å—Ç—å —Ç–µ–ª–æ (payload | `POST /api/users HTTP/1.1` —Å JSON-payload <br> | –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–ª—è—è –µ–≥–æ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞.             |\n| PUT     | –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞     | –ö–ª–∏–µ–Ω—Ç –∑–∞–º–µ–Ω—è–µ—Ç —Ä–µ—Å—É—Ä—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é. –û–±—ã—á–Ω–æ —Å —Ç–µ–ª–æ–º –∑–∞–ø—Ä–æ—Å–∞.                              | `DELETE /api/users/123 HTTP/1.1`               | –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id=123. –û–±—ã—á–Ω–æ –±–µ–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞.                       |\n| PATCH   | –ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞  | –ö–ª–∏–µ–Ω—Ç —á–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ—Å—É—Ä—Å, –ø–µ—Ä–µ–¥–∞–≤–∞—è –∏–∑–º–µ–Ω–µ–Ω–∏—è. –° —Ç–µ–ª–æ–º –∑–∞–ø—Ä–æ—Å–∞                            |                                                |                                                                               |\n| DELETE  | –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞              | –ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —É–¥–∞–ª–∏—Ç—å —Ä–µ—Å—É—Ä—Å. –û–±—ã—á–Ω–æ –±–µ–∑ —Ç–µ–ª–∞                                                     |                                                |                                                                               |\n| HEAD    | –ó–∞–ø—Ä–æ—Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–µ—Å—É—Ä—Å–∞     | –ö–∞–∫ GET, –Ω–æ –±–µ–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞ - —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏                                                    | `HEAD /api/users/123 HTTP/1.1`                 | –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Å—É—Ä—Å). |\n| OPTIONS | –ó–∞–ø—Ä–æ—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –º–µ—Ç–æ–¥–æ–≤ | –ö–ª–∏–µ–Ω—Ç —É–∑–Ω–∞–µ—Ç, –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–µ—Å—É—Ä—Å–∞                                       | `OPTIONS /api/users HTTP/1.1`                  | –£–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ HTTP –º–µ—Ç–æ–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞.              |\n",
      "type": "text",
      "width": 1210,
      "x": -660,
      "y": 1323
    }
  ]
}